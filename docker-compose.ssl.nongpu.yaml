services:

  dask-scheduler:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-dask:latest
    command: dask-scheduler
    volumes:
      - notebooks:/notebooks
      - data:/data
    networks:
      - network

  dask-worker:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-dask:latest
    depends_on:
      - dask-scheduler
    command: dask-worker ${DASK_SCHEDULER_ADDRESS}
    volumes:
      - notebooks:/notebooks
      - data:/data
    deploy:
      replicas: 4
    networks:
      - network
  
  jupyter:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-jupyter:latest
    depends_on:
      - dask-worker
      - api-hub
    volumes:
      - data:/data
      - notebooks:/notebooks
      - jupyter_database:/jupyterhub_database
      - jupyter_etc:/etc
      - jupyter_cron:/var/spool/cron
      - jupyter_home:/home
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - DASK_SCHEDULER_ADDRESS=${DASK_SCHEDULER_ADDRESS}
      - API_URL=${API_URL}
    command: /bin/sh /code/start_jupyter.sh
    networks:
      - network

  mlflow:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-mlflow:latest
    volumes:
      - mlflow_backend_storage:/backend_uri
      - mlflow_artifact_storage:/artifact_store
    environment:
      - MLFLOW_BACKEND_STORE_URI=${MLFLOW_BACKEND_STORE_URI}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - MLFLOW_TRACKING_ARTIFACT_STORE=${MLFLOW_TRACKING_ARTIFACT_STORE}
    command: /bin/sh -c "mlflow server --artifacts-destination ${MLFLOW_TRACKING_ARTIFACT_STORE} --host 0.0.0.0 --port 2244 --gunicorn-opts '-t ${MLFLOW_TIMEOUT_SECONDS}'"
    networks:
      - model_network
      - network

  api-hub:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-apihub:latest
    depends_on:
      - mlflow
    volumes:
      - data:/data
      - model_server_cache:/model_cache
      - model_server_database:/database
      - variable_store:/variable_store
      - predictions:/predictions
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SERVED_MODEL_CACHE_DIR=${API_HUB_SERVED_MODEL_CACHE_DIR}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - ADMIN_USERNAME=${API_HUB_ADMIN_USERNAME}
      - ADMIN_KEY=${API_HUB_ADMIN_KEY}
      - ADMIN_PASSWORD=${API_HUB_ADMIN_PASSWORD}
      - DATA_DIRECTORY=${API_HUB_DATA_DIRECTORY}
      - VARIABLE_STORE_DIRECTORY=${API_HUB_VARIABLE_STORE_DIRECTORY}
      - PREDICTIONS_CACHE_DIR=${API_HUB_PREDICTIONS_DIR}
    command: uvicorn main:app --host 0.0.0.0 --port 4488 --root-path /api
    networks:
      - model_network
      - network

  mlil-ui:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-ui:latest
    depends_on:
      - mlflow
      - jupyter
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - INACTIVITY_TIMEOUT=${INACTIVITY_TIMEOUT}
      - API_URL=${API_URL}
    command: uvicorn main:app --host 0.0.0.0 --port 1122
    networks:
      - network

  nginx:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-nginx:latest
    depends_on:
      - jupyter
      - mlflow
      - mlil-ui
    volumes:
      - ./certs/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - ./certs/privkey.pem:/etc/nginx/ssl/privkey.pem
    environment:
      - USE_SSL=true
    ports:
      - "80:80"
      - "443:443"
    command: bash /code/setup.sh
    networks:
      - network

volumes:
  mlflow_artifact_storage:
  mlflow_backend_storage:
  model_server_database:
  model_server_cache:
  jupyter_database:
  variable_store:
  jupyter_cron:
  jupyter_home:
  jupyter_etc:
  predictions:
  notebooks:
  data:

networks:
  model_network:
  network:
