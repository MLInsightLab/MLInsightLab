services:

  dask-scheduler:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-dask:latest
    command: dask-scheduler
    volumes:
      - notebooks:/notebooks
    networks:
      - jupyter_network

  dask-worker:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-dask:latest
    depends_on:
      - dask-scheduler
    command: dask-worker ${DASK_SCHEDULER_ADDRESS}
    volumes:
      - notebooks:/notebooks
    deploy:
      replicas: 4
    networks:
      - jupyter_network

  mlflow:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-mlflow:latest
    environment:
      - MLFLOW_BACKEND_STORE_URI=${MLFLOW_BACKEND_STORE_URI}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - MLFLOW_TRACKING_ARTIFACT_STORE=${MLFLOW_TRACKING_ARTIFACT_STORE}
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER_BACKEND}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD_BACKEND}
      - MLFLOW_S3_ENDPOINT_URL=${MINIO_URL_BACKEND}
    command: /bin/sh -c "mlflow db upgrade ${MLFLOW_BACKEND_STORE_URI} || true && mlflow server --artifacts-destination ${MLFLOW_TRACKING_ARTIFACT_STORE} --host 0.0.0.0 --port 5000 --gunicorn-opts '-t ${MLFLOW_TIMEOUT_SECONDS}'"
    networks:
      - mlflow_network
      - model_network
      - apihub_network

  postgres-jupyter:
    restart: always
    image: postgres:alpine
    volumes:
      - pgjupyter:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${JUPYTER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${JUPYTER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${JUPYTER_POSTGRES_DB}
    networks:
      - jupyter_network

  postgres-mlflow:
    restart: always
    image: postgres:alpine
    volumes:
      - pgmlflow:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${MLFLOW_POSTGRES_USER}
      - POSTGRES_PASSWORD=${MLFLOW_POSTGRES_PASSWORD}
      - POSTGRES_DB=${MLFLOW_POSTGRES_DB}
    networks:
      - mlflow_network

  postgres-apihub:
    restart: always
    image: postgres:alpine
    volumes:
      - pgapihub:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${API_HUB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${API_HUB_POSTGRES_PASSWORD}
      - POSTGRES_DB=${API_HUB_POSTGRES_DB}
    networks:
      - apihub_network

  minio-backend:
    restart: always
    image: minio/minio
    volumes:
      - minio_backend:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER_BACKEND}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD_BACKEND}
    command: minio server /data --console-address ":9001"
    networks:
      - mlflow_network
      - apihub_network
      - minio_backend_network

  minio-init-backend:
    image: minio/mc
    depends_on:
      - minio-backend
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER_BACKEND}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD_BACKEND}
    entrypoint: >
      /bin/sh -c "
        sleep 5 &&
        mc alias set local ${MINIO_URL_BACKEND} ${MINIO_ROOT_USER_BACKEND} ${MINIO_ROOT_PASSWORD_BACKEND} &&
        mc mb --ignore-existing local/mlflow &&
        mc mb --ignore-existing local/predictions &&
        mc mb --ignore-existing local/model-cache &&
        mc mb --ignore-existing local/variables
      "
    networks:
      - minio_backend_network

  minio-external:
    restart: always
    image: minio/minio
    volumes:
      - minio_external:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER_BACKEND}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD_BACKEND}
    command: minio server /data --console-address ":9001"
    networks:
      - minio_external_network
      - model_network

  mlil-ui:
    restart: always
    image: ghcr.io/mlinsightlab/mlinsightlab-ui:latest
    depends_on:
      - mlflow
      - jupyter
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - INACTIVITY_TIMEOUT=${INACTIVITY_TIMEOUT}
      - API_URL=${API_URL}
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - apihub_network

volumes:
  minio_external:
  minio_backend:
  jupyter_cron:
  jupyter_home:
  jupyter_etc:
  notebooks:
  pgjupyter:
  pgmlflow:
  pgapihub:
  ollama:

networks:
  minio_external_network:
  minio_backend_network:
  jupyter_network:
  apihub_network:
  mlflow_network:
  model_network:
