services:

  dask-scheduler:
    restart: always
    build: ./dask
    command: dask-scheduler
    volumes:
      - ${NOTEBOOK_MOUNT}
    networks:
      - network

  dask-worker:
    restart: always
    build: ./dask
    depends_on:
      - dask-scheduler
    command: dask-worker ${DASK_SCHEDULER_ADDRESS}
    volumes:
      - ${NOTEBOOK_MOUNT}
    deploy:
      replicas: 4
    networks:
      - network
  
  jupyter:
    restart: always
    build: ./jupyter
    depends_on:
      - dask-worker
    volumes:
      - ${NOTEBOOK_MOUNT}
      - ${JUPYTERHUB_DATABASE_MOUNT}
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - DASK_SCHEDULER_ADDRESS=${DASK_SCHEDULER_ADDRESS}
      - API_URL=${API_URL}
    networks:
      - network
    #devices:
      #- driver: nvidia
        #count: all
        #capabilities: [gpu]

  mlflow:
    restart: always
    build: ./mlflow
    volumes:
      - ${MLFLOW_BACKEND_STORAGE}
      - ${MLFLOW_ARTIFACT_STORAGE}
    environment:
      - MLFLOW_BACKEND_STORE_URI=${MLFLOW_BACKEND_STORE_URI}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - MLFLOW_TRACKING_ARTIFACT_STORE=${MLFLOW_TRACKING_ARTIFACT_STORE}
    entrypoint: /bin/sh -c "mlflow server --artifacts-destination ${MLFLOW_TRACKING_ARTIFACT_STORE} --host 0.0.0.0 --port 2244"
    networks:
      - network

  model-server:
    restart: always
    build: ./model_server
    depends_on:
      - mlflow
    volumes:
      - ${MODEL_SERVER_DB_MOUNT}
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - ADMIN_USERNAME=${MODEL_SERVER_ADMIN_USERNAME}
      - ADMIN_KEY=${MODEL_SERVER_ADMIN_KEY}
      - ADMIN_PASSWORD=${MODEL_SERVER_ADMIN_PASSWORD}
    networks:
      - network
    #devices:
      #- driver: nvidia
        #count: all
        #capabilities: [gpu]

  nginx:
    restart: always
    build: ./nginx
    depends_on:
      - jupyter
      - mlflow
    ports:
      - "80:80"
    command: bash /code/setup.sh
    networks:
      - network

volumes:
    mlflow_artifact_storage:
    mlflow_backend_storage:
    model_server_database:
    jupyter_database:
    notebooks:

networks:
  network:
