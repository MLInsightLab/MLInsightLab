version: '3'

services:

  dask-scheduler:
    restart: always
    image: ghcr.io/dask/dask:latest
    container_name: dask-scheduler
    #ports:
      #- "8786:8786" # Scheduler
      #- "8787:8787" # UI
    command: dask-scheduler
    volumes:
      - notebooks:/home
    networks:
      - network

  dask-worker:
    restart: always
    image: ghcr.io/dask/dask:latest
    depends_on:
      - dask-scheduler
    command: dask-worker tcp://dask-scheduler:8786
    volumes:
      - notebooks:/home
    deploy:
      replicas: 4
    networks:
      - network
  
  jupyter:
    restart: always
    build: ./jupyter
    image: jupyter
    container_name: jupyter
    depends_on:
      - dask-worker
    #ports:
      #- "8000:8000"
    volumes:
      - notebooks:/home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:2244
      - DASK_SCHEDULER_ADDRESS=tcp://dask-scheduler:8786
    networks:
      - network

  mlflow:
    restart: always
    build: ./mlflow
    image: mlflow
    container_name: mlflow
    #ports:
      #- "2244:2244"
    volumes:
      - mlflow_backend_storage:/backend_uri
      - mlflow_artifact_storage:/artifact_store
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:////backend_uri/backend_store.sqlite
      - MLFLOW_TRACKING_URI=http://mlflow:2244
      - MLFLOW_TRACKING_ARTIFACT_STORE=file:///artifact_store
    entrypoint: /bin/sh -c "mlflow server --artifacts-destination file:///artifact_store --host 0.0.0.0 --port 2244"
    networks:
      - network

  model-server:
    restart: always
    build: ./model_server
    #container_name: model_server
    depends_on:
      - mlflow
    #ports:
      #- "4488:4488"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:2244
    deploy:
      replicas: 2
    networks:
      - network

  nginx:
    restart: always
    build: ./nginx
    container_name: nginx
    depends_on:
      - jupyter
      - mlflow
    ports:
      - "80:80"
    environment:
      - AUTH_USERNAME=odsp
      - AUTH_PASSWORD=odsp
    command: bash /code/setup.sh
    networks:
      - network

volumes:
    mlflow_backend_storage:
    mlflow_artifact_storage:
    notebooks:

networks:
  network:
